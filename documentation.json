{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2e28d86e2439d58ce2de0fd0bfcd94297b68ffe1cef640085a6c136800c41609c9dffe9e1a2dd92ca36e401457dc5e5d9051a7159d74178bab6c377039133578",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'angular-17'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HttpClientModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "InputComponent",
                    "type": "component"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "ProfileEditorComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterOutlet } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ButtonComponent } from './shared/button/button.component';\nimport { InputComponent } from './shared/input/input.component';\nimport { ProfileEditorComponent } from './profile-editor/profile-editor.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet,\n    HttpClientModule,\n    ButtonComponent,\n    InputComponent,\n    TranslateModule,\n    ProfileEditorComponent,\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'angular-17';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container margin-block-start-8\">\n  <app-button\n    class=\"margin-inline-end-6\"\n    labelKey=\"btn-accent\"\n    size=\"large\"\n    variant=\"accent\"\n  />\n\n  <app-button\n    labelKey=\"btn-primary\"\n    size=\"large\"\n  />\n</div>\n\n<div class=\"container margin-block-start-10\">\n  <app-input\n    label=\"Este es un input\"\n    name=\"input\"\n    placeholder=\"Placeholder\"\n  />\n\n  <app-input\n    label=\"Required input\"\n    name=\"required-input\"\n    placeholder=\"Placeholder\"\n    required\n  />\n\n  <app-input\n    [hasLabel]=\"false\"\n    label=\"Input sin label\"\n    name=\"input-without-label\"\n  />\n\n  <app-input\n    label=\"Este es un input\"\n    name=\"input\"\n    placeholder=\"Placeholder\"\n    readonly\n  />\n</div>\n\n<div class=\"container margin-block-start-10\">\n  <profile-editor-form/>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-2650056a7cab644c43eaaf0450f17399c235ba5d36af8cb4e136d1de33da185b4ced3c564533ae2183632f1c26c7381fb1bbc11d9d6c6306b4c8e4417fd5de84",
            "file": "src/app/shared/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "labelKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "rawdescription": "\n\nDefines the label of the button\n",
                    "description": "<p>Defines the label of the button</p>\n",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefines the size of the button\n",
                    "description": "<p>Defines the size of the button</p>\n",
                    "line": 20,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefines the html type of the button\n",
                    "description": "<p>Defines the html type of the button</p>\n",
                    "line": 25,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefines the variant of the button\n",
                    "description": "<p>Defines the variant of the button</p>\n",
                    "line": 30,
                    "type": "\"accent\" | \"primary\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 35,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClickButton",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles the click event of the button\n",
                    "description": "<p>Handles the click event of the button</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 928,
                                "end": 933,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 922,
                                "end": 927,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-button',\n  standalone: true,\n  imports: [CommonModule, TranslateModule],\n  templateUrl: './button.component.html',\n})\nexport class ButtonComponent {\n  /**\n   * Defines the label of the button\n   */\n  @Input({ required: true }) labelKey!: string;\n\n  /**\n   * Defines the size of the button\n   */\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Defines the html type of the button\n   */\n  @Input() type: 'button' | 'submit' | 'reset' = 'button';\n\n  /**\n   * Defines the variant of the button\n   */\n  @Input() variant: 'accent' | 'primary' = 'primary';\n\n  /**\n   * Optional click handler\n   */\n  @Output() onClick = new EventEmitter<any>();\n\n  /**\n   * Handles the click event of the button\n   * @param event\n   */\n  onClickButton(event: any) {\n    this.onClick.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<button\n  (click)=\"onClickButton($event)\"\n  [attr.data-size]=\"size\"\n  [attr.data-variant]=\"variant\"\n  [type]=\"type\"\n  class=\"button\"\n>\n  {{ labelKey | translate }}\n</button>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-1af4dac9286687288e028fb60f8a399d6037dec8f5a732b663860044a2c829b282f3b326c00b0c182467486f69edf79ec4f2e5b2f4caab9f8c0164e0839c8121",
            "file": "src/app/shared/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CONTROL_VALUE_ACCESSOR"
                }
            ],
            "selector": "app-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": false,
                    "name": "hasLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether to show the label or not\n",
                    "description": "<p>Whether to show the label or not</p>\n",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "rawdescription": "\n\nThe label to show if hasLabel is true, if not, this is used as aria-label\n",
                    "description": "<p>The label to show if hasLabel is true, if not, this is used as aria-label</p>\n",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "rawdescription": "\n\nThe formControlName of the input to handle with reactive forms\n",
                    "description": "<p>The formControlName of the input to handle with reactive forms</p>\n",
                    "line": 56,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe placeholder to show in the input\n",
                    "description": "<p>The placeholder to show in the input</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether the input is readonly or not\n",
                    "description": "<p>Whether the input is readonly or not</p>\n",
                    "line": 52,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether the input is required or not\n",
                    "description": "<p>Whether the input is required or not</p>\n",
                    "line": 60,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe HTML type of the input\n",
                    "description": "<p>The HTML type of the input</p>\n",
                    "line": 48,
                    "type": "\"text\" | \"email\" | \"password\" | \"number\"",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe value of the input\n",
                    "description": "<p>The value of the input</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "#onChangeFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "inputValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "methodsClass": [
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  booleanAttribute,\n  Component,\n  forwardRef,\n  Input,\n  Provider,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\n\nconst CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-input',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  providers: [CONTROL_VALUE_ACCESSOR],\n  templateUrl: './input.component.html',\n})\nexport class InputComponent implements ControlValueAccessor {\n  /**\n   * Whether to show the label or not\n   */\n  @Input({ transform: booleanAttribute }) hasLabel = true;\n  /**\n   * The label to show if hasLabel is true, if not, this is used as aria-label\n   */\n  @Input({ required: true }) label!: string;\n  /**\n   * The placeholder to show in the input\n   */\n  @Input() placeholder = '';\n  /**\n   * The value of the input\n   */\n  @Input() value = '';\n  /**\n   * The HTML type of the input\n   */\n  @Input() type: 'text' | 'email' | 'password' | 'number' = 'text';\n  /**\n   * Whether the input is readonly or not\n   */\n  @Input({ transform: booleanAttribute }) readonly = false;\n  /**\n   * The formControlName of the input to handle with reactive forms\n   */\n  @Input({ required: true }) name!: string;\n  /**\n   * Whether the input is required or not\n   */\n  @Input({ transform: booleanAttribute }) required = false;\n\n  inputValue = '';\n  #onChangeFn!: (value: string) => void;\n\n  onChange($event: any) {\n    console.log($event.target.value);\n    this.#onChangeFn($event.target.value);\n  }\n\n  writeValue(value: string): void {\n    console.log({ value });\n    this.inputValue = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.#onChangeFn = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // throw new Error('Method not implemented.');\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // throw new Error('Method not implemented.');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "@if (hasLabel) {\n  <label\n    class=\"label\"\n    [for]=\"name\"\n    [ngClass]=\"[\n      required ? 'required' : '',\n      readonly ? 'readonly' : ''\n    ]\"\n  >\n    {{ label }}\n  </label>\n\n  <input\n    class=\"input\"\n    [type]=\"type\"\n    (change)=\"onChange($event)\"\n    [id]=\"name\"\n    [placeholder]=\"placeholder\"\n    [required]=\"required\"\n    [readonly]=\"readonly\"\n    [value]=\"inputValue\"\n  />\n} @else {\n  <input\n    class=\"input\"\n    [type]=\"type\"\n    [attr.aria-label]=\"label\"\n    [name]=\"name\"\n    [placeholder]=\"placeholder\"\n    [required]=\"required\"\n    [readonly]=\"readonly\"\n    (change)=\"onChange($event)\"\n    [value]=\"inputValue\"\n  />\n}\n"
        },
        {
            "name": "ProfileEditorComponent",
            "id": "component-ProfileEditorComponent-8e5d2dd54e69c6389d52e5aad54e8576222bd690af46d5642b1fe462e80b2c5bc328b7f1d13ea20980854b782c668b07ea1e58db0a58e68453ab49b7e681dd22",
            "file": "src/app/profile-editor/profile-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "profile-editor-form",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "templateUrl": [
                "./profile-editor.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "#formBuilder",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "InputComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { InputComponent } from '../shared/input/input.component';\nimport { ButtonComponent } from '../shared/button/button.component';\n\n@Component({\n  selector: 'profile-editor-form',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, InputComponent, ButtonComponent],\n  templateUrl: './profile-editor.component.html',\n  styles: ``,\n})\nexport class ProfileEditorComponent implements OnInit {\n  profileForm!: FormGroup;\n  #formBuilder = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.profileForm = this.#formBuilder.group({\n      firstName: [''],\n      lastName: [''],\n      address: this.#formBuilder.group({\n        street: [''],\n        city: [''],\n        state: [''],\n        zip: [''],\n      }),\n    });\n  }\n\n  onSubmit(): void {\n    console.log(this.profileForm.value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"profileForm\">\n  <legend>Profile</legend>\n\n  <div>\n    <app-input\n      formControlName=\"firstName\"\n      label=\"First Name\"\n      name=\"firstName\"\n    />\n\n    <app-input\n      formControlName=\"lastName\"\n      label=\"Last Name\"\n      name=\"lastName\"\n    />\n\n    <app-button labelKey=\"btn-send\" type=\"submit\"/>\n  </div>\n</form>\n"
        }
    ],
    "modules": [
        {
            "name": "StorybookModule",
            "id": "module-StorybookModule-6e70ba5f4200ae7d1ce51f45d892b62d793a42999329baeb11fbc400e21a02ac22961b3d19c56a807c66788c33e2b2151d6d9414f292de833fd03fe4c957cc59",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/config/storybook/storybook.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport {\n  TranslateLoader,\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\n\nimport { HttpLoaderFactory } from '../../app.config';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      defaultLanguage: 'en',\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n  ],\n})\nexport class StorybookModule {\n  constructor(translateService: TranslateService) {\n    translateService.setDefaultLang('en');\n    translateService.use('en');\n  }\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    labelKey: 'Accent',\n    variant: 'accent',\n  },\n}"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(),\n    importProvidersFrom(\n      TranslateModule.forRoot({\n        defaultLanguage: 'en',\n        loader: {\n          provide: TranslateLoader,\n          useFactory: HttpLoaderFactory,\n          deps: [HttpClient],\n        },\n      }),\n    ),\n  ],\n}"
            },
            {
                "name": "CONTROL_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/input/input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Provider",
                "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputComponent),\n  multi: true,\n}"
            },
            {
                "name": "InputEmail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Input',\n    name: 'input-email',\n    placeholder: 'Input email',\n    type: 'email',\n  },\n}"
            },
            {
                "name": "InputNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Input',\n    name: 'input-number',\n    placeholder: 'Input number',\n    type: 'number',\n  },\n}"
            },
            {
                "name": "InputPassword",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Input',\n    name: 'input-password',\n    placeholder: 'Input password',\n    type: 'password',\n  },\n}"
            },
            {
                "name": "InputReadonly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Input',\n    name: 'input-readonly',\n    placeholder: 'Input readonly',\n    readonly: true,\n  },\n}"
            },
            {
                "name": "InputRequiredWithLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Input Required',\n    name: 'input-with-label',\n    required: true,\n    placeholder: 'Input with label',\n  },\n}"
            },
            {
                "name": "InputWithLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Input',\n    name: 'input-with-label',\n    placeholder: 'Input with label',\n  },\n}"
            },
            {
                "name": "InputWithoutLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    hasLabel: false,\n    label: 'Input without label',\n    placeholder: 'Input without label',\n    name: 'input-without-label',\n  },\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    labelKey: 'Large',\n    variant: 'primary',\n  },\n}"
            },
            {
                "name": "Medium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'medium',\n    labelKey: 'Medium',\n    variant: 'primary',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  title: 'Molecules/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [StorybookModule],\n    }),\n  ],\n  render: (args: ButtonComponent) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <app-button\n        [labelKey]=\"Button\"\n        [variant]=\"variant\"\n        [size]=\"size\"\n        [type]=\"type\"\n        (onClick)=\"onClick($event)\"\n      />\n    `,\n  }),\n  argTypes: {\n    type: {\n      control: 'select',\n    },\n    size: {\n      control: 'select',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\n  title: 'Molecules/Input',\n  component: InputComponent,\n  tags: ['autodocs'],\n  render: (args: InputComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  argTypes: {\n    type: {\n      control: 'select',\n    },\n    readonly: {\n      control: 'boolean',\n    },\n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    labelKey: 'btn-primary',\n    variant: 'primary',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    labelKey: 'Small',\n    variant: 'primary',\n  },\n}"
            }
        ],
        "functions": [
            {
                "name": "HttpLoaderFactory",
                "file": "src/app/app.config.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "src/app/shared/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "src/app/shared/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/shared/button/button.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    labelKey: 'Accent',\n    variant: 'accent',\n  },\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    labelKey: 'Large',\n    variant: 'primary',\n  },\n}"
                },
                {
                    "name": "Medium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'medium',\n    labelKey: 'Medium',\n    variant: 'primary',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  title: 'Molecules/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [StorybookModule],\n    }),\n  ],\n  render: (args: ButtonComponent) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <app-button\n        [labelKey]=\"Button\"\n        [variant]=\"variant\"\n        [size]=\"size\"\n        [type]=\"type\"\n        (onClick)=\"onClick($event)\"\n      />\n    `,\n  }),\n  argTypes: {\n    type: {\n      control: 'select',\n    },\n    size: {\n      control: 'select',\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    labelKey: 'btn-primary',\n    variant: 'primary',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    labelKey: 'Small',\n    variant: 'primary',\n  },\n}"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(),\n    importProvidersFrom(\n      TranslateModule.forRoot({\n        defaultLanguage: 'en',\n        loader: {\n          provide: TranslateLoader,\n          useFactory: HttpLoaderFactory,\n          deps: [HttpClient],\n        },\n      }),\n    ),\n  ],\n}"
                }
            ],
            "src/app/shared/input/input.component.ts": [
                {
                    "name": "CONTROL_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/input/input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Provider",
                    "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputComponent),\n  multi: true,\n}"
                }
            ],
            "src/app/shared/input/input.stories.ts": [
                {
                    "name": "InputEmail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Input',\n    name: 'input-email',\n    placeholder: 'Input email',\n    type: 'email',\n  },\n}"
                },
                {
                    "name": "InputNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Input',\n    name: 'input-number',\n    placeholder: 'Input number',\n    type: 'number',\n  },\n}"
                },
                {
                    "name": "InputPassword",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Input',\n    name: 'input-password',\n    placeholder: 'Input password',\n    type: 'password',\n  },\n}"
                },
                {
                    "name": "InputReadonly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Input',\n    name: 'input-readonly',\n    placeholder: 'Input readonly',\n    readonly: true,\n  },\n}"
                },
                {
                    "name": "InputRequiredWithLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Input Required',\n    name: 'input-with-label',\n    required: true,\n    placeholder: 'Input with label',\n  },\n}"
                },
                {
                    "name": "InputWithLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Input',\n    name: 'input-with-label',\n    placeholder: 'Input with label',\n  },\n}"
                },
                {
                    "name": "InputWithoutLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    hasLabel: false,\n    label: 'Input without label',\n    placeholder: 'Input without label',\n    name: 'input-without-label',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\n  title: 'Molecules/Input',\n  component: InputComponent,\n  tags: ['autodocs'],\n  render: (args: InputComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  argTypes: {\n    type: {\n      control: 'select',\n    },\n    readonly: {\n      control: 'boolean',\n    },\n  },\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/app.config.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/app/app.config.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "http",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "http",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/shared/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "src/app/shared/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/input/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "src/app/shared/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile-editor/profile-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 85,
                "coverageCount": "6/7",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Medium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 50,
                "coverageCount": "8/16",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/input/input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CONTROL_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputEmail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputPassword",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputReadonly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputRequiredWithLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputWithLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputWithoutLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}